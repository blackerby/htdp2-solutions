;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname htdp_01_06_v2) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(require 2htdp/image)
(require 2htdp/universe)

(define WIDTH 500)
(define HEIGHT 500)
(define X-CENTER (/ WIDTH 2))
(define CIRCLE-FACTOR 6)
(define MOON-FACTOR 25)
(define UFO-RADIUS (/ WIDTH 50))
(define TANK-HEIGHT (/ WIDTH 50))
(define BACKGROUND-COLOR "black")
(define MOON (circle (/ WIDTH CIRCLE-FACTOR) "solid" "white"))
(define MOON-WIDTH (image-width MOON))
(define MOON-RADIUS (/ MOON-WIDTH 2))
(define MOON-HEIGHT (image-height MOON))
(define MOON-X (+ (/ WIDTH MOON-FACTOR) MOON-RADIUS))
(define MOON-Y (+ (/ HEIGHT MOON-FACTOR) MOON-RADIUS))
(define MOON-SHADOW-X (+ (/ WIDTH MOON-FACTOR) MOON-X))
(define MOON-SHADOW (circle (/ WIDTH CIRCLE-FACTOR) "solid" "black"))
(define CANVAS (empty-scene WIDTH HEIGHT BACKGROUND-COLOR))
(define BACKGROUND (place-image MOON-SHADOW MOON-SHADOW-X MOON-Y
                                (place-image MOON MOON-X MOON-Y CANVAS)))

(define UFO (overlay (circle UFO-RADIUS "solid" "green")
                     (ellipse (* UFO-RADIUS 4) UFO-RADIUS "solid" "green")))
(define TANK (rectangle (* TANK-HEIGHT 3) TANK-HEIGHT "solid" "blue"))
(define MISSILE (triangle TANK-HEIGHT "solid" "red"))
(define TANK-SPEED 3)
(define UFO-SPEED 3)
(define MISSILE-SPEED (* (* UFO-SPEED 2) -1))
(define UFO-Y (/ (image-height UFO) 2))
(define TANK-Y (- HEIGHT (/ (image-height TANK) 2)))
(define HIT-RADIUS (/ (image-width UFO) 2))

(define-struct sigs [ufo tank missile])
; A SIGS.v2 (short for SIGS version 2) is a structure:
;   (make-sigs UFO Tank MissileOrNot)
; interpretation represents the complete state of a
; space invader game

; A UFO is a Posn. 
; interpretation (make-posn x y) is the UFO's location 
; (using the top-down, left-to-right convention)
; examples
; - (make-posn 20 10)
; - (make-posn 20 100)
 
(define-struct tank [loc vel])
; A Tank is a structure:
;   (make-tank Number Number). 
; interpretation (make-tank x dx) specifies the position:
; (x, HEIGHT) and the tank's speed: dx pixels/tick
; examples:
; - (make-tank 28 -3)
; - (make-tank 100 3)
 
; A MissileOrNot is one of: 
; – #false
; – Posn
; interpretation#false means the missile is in the tank;
; Posn says the missile is at that location

; SIGS.v2 -> Image 
; renders the given game state on top of BACKGROUND 
(define (si-render.v2 s)
  (tank-render
    (sigs-tank s)
    (ufo-render (sigs-ufo s)
                (missile-render.v2 (sigs-missile s)
                                   BACKGROUND))))
